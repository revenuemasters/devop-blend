<?php
require_once "Mail.php";

$ps_search_string = $argv[1];
$logfile = $argv[2];
$script_filename = basename(__FILE__);
$pid = shell_exec("ps -fu root| grep \"$ps_search_string\" | grep -v \"grep\" | grep -v \"$script_filename\" | awk '{print $2}'");
$pid = trim(preg_replace('/\s+/', ',', $pid));
$pid = rtrim($pid, ",");
$write_down_output = '';

while (shell_exec("ps -fu root| grep \"$ps_search_string\" | grep -v \"grep\" | grep -v \"$script_filename\" | awk '{print $2}'")) {
  # We will wait.
    sleep(5);
}

if (!empty($pid)) {
    $from = "No-Reply <<%= @email_username %>>";
    $to = "<%= @to_address %>";
    $subject = "Process finished ($pid)";

    if (file_exists($logfile)) {
        $logFileTail = shell_exec("tail -n 20 $logfile");
        $body = "This is the tail for the log file $logfile:\n\n";
        $body .= $logFileTail;

        if (preg_match('/(shell finish)$/i', $logFileTail)) {
            // This is a good place to call any script that depends
            // requires that the import process is finished without
            // problems.
            <% if @post_import_enabled -%>
            $output = shell_exec("/var/www/<%= @site %>-post-import.sh");
            preg_replace('/[^A-Za-z0-9\-]/', '', $output);
            $body .= "\n\nOutput from post import:\n\n" . $output . "\n";
            shell_exec("php /var/www/post_import_alerts_<%= @site %>/current/app alert <%= @site %>");
            <% end -%>
        }

    } else {
        $body = "The log file does not exist.\n";
    }

    $host = "<%= @email_host %>";
    $username = "<%= @email_username %>";
    $password = "<%= @email_password %>";
    $headers = array ('From' => $from,   'To' => $to,   'Subject' => $subject);
    $smtp = Mail::factory('smtp',   array ('host' => $host,     'auth' => true,     'username' => $username,     'password' => $password));
    $mail = $smtp->send($to, $headers, $body);

    # The absence of the email will be proof that something failed.
    # we wont provide output from the command itself at this point.
    # if (PEAR::isError($mail)) {
    #     echo("<p>" . $mail->getMessage() . "</p>");
    # } else {
    #     echo("<p>Message successfully sent!</p>");
    # }
} else {
    echo "No running process matched your string.\n";
}

?>
